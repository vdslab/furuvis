{"version":3,"sources":["components/Header.js","components/JapanMap.js","components/Axis.js","components/OverallGraph.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["Header","className","JapanMap","currentArea","useState","japanPath","setJapanPath","area","setArea","json","setJson","targetPoint","setTargetPoint","projection","d3","center","translate","width","height","scale","useEffect","a","fetch","res","data","topojson","objects","features","path","map","item","push","areaCode","properties","N03_007","target","JSON","parse","stringify","strArea","String","length","slice","tmpPoint","point","viewBox","i","d","stroke","strokeWidth","strokeOpacity","style","fill","cx","cy","r","VerricalAxis","graphHeight","label","strokeColor","range","y1","y2","deviceWidth","window","innerWidth","x1","x2","transform","x","y","textAnchor","dominantBaseline","fontSize","ticks","HorizontalAxis","graphWidth","OverallGraph","effect","population","setPopulation","price","setPrice","graphType","setGraphType","displayYear","setDisplayYear","detailData","setDetailData","colorScale","res_popu","data_popu","res_price","data_price","res_2019","data_2019","margin","contentWidth","contentHeight","svgWidth","svgHeight","xScaleYear","domain","nice","xScaleAreaName","mouseEnterAreaHandler","e","currentTarget","dataset","id","yScalePopulation","yScalePrice","yScale2019Price","console","log","preData","onClick","name","Main","Footer","App","render","document","querySelector"],"mappings":"wJAYeA,EAZA,WACb,OACE,iCACE,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,QAAb,sBACA,mBAAGA,UAAU,WAAb,8B,qDC6GKC,EA/GE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAClB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,MAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAsCN,mBAAS,IAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAUMC,EAAaC,MAEhBC,OAAO,CAAC,WAAmB,oBAC3BC,UAAU,CAACC,IAAWC,MACtBC,MAVW,MAwDd,OA5CAC,qBAAU,WACR,sBAAC,oCAAAC,EAAA,sEACmBC,MAAM,kCADzB,cACOC,EADP,gBAGoBA,EAAId,OAHxB,cAGOe,EAHP,gBAIwBC,IACrBD,EACAA,EAAKE,QAAQ,gCANhB,OAIOC,EAJP,OASOC,EAAOd,MAAaD,WAAWA,GAC/BR,EAAY,GAClBsB,EAASA,SAASE,KAAI,SAACC,GACrBzB,EAAU0B,KAAK,CACbH,KAAMA,EAAKE,GACXE,SAAUF,EAAKG,WAAWC,aAI9B5B,EAAaD,GACbK,EAAQiB,GAnBT,2CAAD,KAqBC,IAEHP,qBAAU,WACR,GAAIX,EAAM,CACR,IAAI0B,EAASC,KAAKC,MAAMD,KAAKE,UAAU7B,IACnC8B,EAAUC,OAAOrC,GACrBgC,EAAOR,SAASc,OAAS,EAEzBF,EAAUA,EAAQG,MAAM,GAAI,GAE5BjC,EAAKkB,SAASE,KAAI,SAACC,GACbA,EAAKG,WAAWC,SAAWK,GAC7BJ,EAAOR,SAASI,KAAKD,MAGzB,IAAMa,EAAW7B,IAAeqB,GAC1BS,EAAQ/B,EAAW8B,GACzB/B,EAAegC,GACfpC,EAAQL,MAET,CAACA,IAECE,EAAUoC,OAWb,qBAAKxC,UAAU,cAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAK4C,QAAQ,gBAAgB5B,MAAM,MAAMC,OAAO,MAAhD,UACE,4BACGb,EAAUwB,KAAI,SAACC,EAAMgB,GAAP,OACb,sBAEEC,EAAGjB,EAAKF,KACRoB,OAAO,QACPC,YAAY,MACZC,cAAc,MACdC,MAAO,CACLC,KAAM7C,GAAQuB,EAAKE,SAAW,MAAQ,UANnCc,QAWVnC,EAAY8B,OAAS,EACpB,4BACE,wBACEY,GAAI1C,EAAY,GAChB2C,GAAI3C,EAAY,GAChB4C,EAAE,KACFN,YAAY,IACZG,KAAK,kBACLJ,OAAO,UAIX,UAtCN,qBAAK/C,UAAU,cAAf,SACE,qBAAKA,UAAU,MAAf,SACE,6CCxEGuD,EAAe,SAAC,GAAmC,IAAjCrC,EAAgC,EAAhCA,MAAOsC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC3CC,EAAc,OAEpB,EAAiBxC,EAAMyC,QAAvB,mBAAOC,EAAP,KAAWC,EAAX,KACMC,EAAcC,OAAOC,WAE3B,OACE,8BACE,sBACEC,GAPI,EAQJL,GAAIA,EACJM,GATI,EAUJL,GAAIA,EAAK,EACTd,OAAQW,EACRV,YAAY,MAEd,8BACE,mBAAGmB,UAAS,yBAAoBX,EAAc,EAAlC,iBAAZ,SACE,sBACEY,EAAE,IACFC,EAAE,IACFC,WAAW,MACXC,iBAAiB,UACjBC,SAAUV,EAAc,IAAM,KAAO,KALvC,SAOGL,MAIJvC,EAAMuD,QAAQ7C,KAAI,SAACyC,EAAGxB,GACrB,OACE,oBAAWsB,UAAS,uBAAkBjD,EAAMmD,GAAxB,KAApB,UACE,sBAAMJ,GAAG,IAAIL,GAAG,IAAIM,GAAG,IAAIL,GAAG,IAAId,OAAQW,IAC1C,sBACEU,EAAE,KACFC,EAAE,IACFC,WAAW,MACXC,iBAAiB,UACjBpB,KAAK,QACLqB,SAAUV,EAAc,IAAM,KAAO,KANvC,SAQGO,MAVGxB,aAmBP6B,EAAiB,SAAC,GAA+C,IAA7CxD,EAA4C,EAA5CA,MAAOyD,EAAqC,EAArCA,WAAYnB,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAEzDY,EAAIb,EACJM,EAAcC,OAAOC,WAE3B,EAAiB9C,EAAMyC,QAAvB,mBAAOM,EAAP,KAAWC,EAAX,KACA,OACE,8BACE,sBAAMD,GAAIA,EAAIL,GAAIS,EAAGH,GAAIA,EAAK,GAAIL,GAAIQ,EAAGtB,OAPzB,SAQhB,8BACE,mBAAGoB,UAAS,oBAAeQ,EAAa,EAA5B,aAAkCN,EAAI,GAAtC,KAAZ,SACE,sBACED,EAAE,IACFC,EAAE,IACFC,WAAW,MACXC,iBAAiB,UACjBC,SAAS,KALX,SAOGf,MAIJvC,EAAMuD,MAAM,GAAG7C,KAAI,SAACwC,EAAGvB,GACtB,OACE,mBAAWsB,UAAS,oBAAejD,EAAMkD,GAAK,GAA1B,QAApB,SAQE,sBACEA,EAAE,IACFC,EAAGA,EAAI,GACPC,WAAW,SACXC,iBAAiB,UACjBC,SAAUV,EAAc,IAAM,KAAO,KALvC,SAOGM,KAfGvB,aCoIL+B,EA3MM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,EAAoC1E,mBAAS,IAA7C,mBAAO2E,EAAP,KAAmBC,EAAnB,KACA,EAA0B5E,mBAAS,IAAnC,mBAAO6E,EAAP,KAAcC,EAAd,KACA,EAAkC9E,mBAAS,SAA3C,mBAAO+E,EAAP,KAAkBC,EAAlB,KACA,EAAsChF,mBAAS,MAA/C,mBAAOiF,EAAP,KAAoBC,EAApB,KACA,EAAoClF,mBAAS,IAA7C,mBAAOmF,EAAP,KAAmBC,EAAnB,KACA,EAAoCpF,mBAAS,MAA7C,mBACMqF,GADN,UACmB3E,IAAgBA,MAenC,GAdAM,qBAAU,WACR,sBAAC,sCAAAC,EAAA,sEACwBC,MAAM,+BAD9B,cACOoE,EADP,gBAEyBA,EAASjF,OAFlC,cAEOkF,EAFP,OAGCX,EAAcW,GAHf,SAKyBrE,MAAM,0BAL/B,cAKOsE,EALP,iBAM0BA,EAAUnF,OANpC,eAMOoF,EANP,OAOCX,EAASW,GAPV,UAQwBvE,MAAM,yBAR9B,eAQOwE,EARP,iBASyBA,EAASrF,OATlC,QASOsF,EATP,OAUCP,EAAcO,GAVf,2CAAD,KAYC,IACuB,IAAtBhB,EAAWtC,OACb,OAAO,qBAAKxC,UAAU,cAAf,wBAET,IAAM+F,EACC,GADDA,EAGE,IAIFC,EAAe,IACfC,EAAgB,IAChBC,EALG,GAKuBH,EAAcC,EACxCG,EAAYJ,EARR,GAQqCE,EACzCG,EAAavF,MAEhBwF,OAAOxF,IAAUmE,GAAO,SAACnD,GAAD,OAAUA,EAAI,SACtC8B,MAAM,CAAC,EAAGqC,IACVM,OACGC,EAAiB1F,MAEpBwF,OAAOxF,IAAUyE,GAAY,SAACzD,GAAD,OAAUA,EAAI,SAC3C8B,MAAM,CAAC,EAAGqC,IACVM,OASGE,EAAwB,SAACC,GAC7B5B,EAAO4B,EAAEC,cAAcC,QAAQC,KAG3BC,EAAmBhG,MAEtBwF,OAAO,CAAC,EAAGxF,IAAUiE,GAAY,SAACjD,GAAD,OAAUA,EAAI,cAAgB,KAC/D8B,MAAM,CAACsC,EAAe,IACnBa,EAAcjG,MAEjBwF,OAAO,CAAC,EAAGxF,IAAUmE,GAAO,SAACnD,GAAD,OAAUA,EAAI,SAAW,KACrD8B,MAAM,CAACsC,EAAe,IACnBc,EAAkBlG,MAErBwF,OAAO,CAAC,EAAGxF,IAAUyE,GAAY,SAACzD,GAAD,OAAUA,EAAI,SAAW,KAC1D8B,MAAM,CAACsC,EAAe,IACzB,OACE,qBAAKjG,UAAU,cAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBACE4C,QAAO,WAAMmD,EAAN,aAAsBA,EAAtB,YAAoCG,EAApC,YAAgDC,GACvDnF,MAAOkF,EACPjF,OAAQkF,EAHV,UAKmB,OAAhBf,GAAwBF,GACvB,cAAC,EAAD,CACEhE,MAAOkF,EACPzB,WAAYqB,EACZxC,YAAayC,EACbxC,MAAM,WAGO,OAAhB2B,GAAwBF,GACvB,cAAC,EAAD,CACEhE,MAAqB,UAAdgE,EAAwB4B,EAAcD,EAC7CrD,YAAayC,EACbxC,MAAqB,UAAdyB,EAAwB,iCAAU,iBAG5B,OAAhBE,GAAsC,UAAdF,GACvB,4BACGF,EAAMpD,KAAI,SAACC,EAAMgB,GAChB,IAAMuB,EAAIgC,EAAWvE,EAAI,MAAY,GAC/BwC,EAAIyC,EAAYjF,EAAI,OAI1B,OAFAmF,QAAQC,IAAIb,EAAWvE,EAAI,OAGzB,sBAEEiB,EAAC,YAAOsB,EAAI,GAAX,YAAiBC,EAAjB,sCACMD,EAAI,GADV,cACkB6B,EADlB,cACqC7B,EAAI,GADzC,sCAEKC,EAFL,4BAIDtB,OAAQyC,EAAW,SACnBrC,KAAMqC,EAAW,UANZ3D,EAAK+E,SAYH,OAAhBxB,GAAsC,eAAdF,GACvB,4BACGJ,EAAWlD,KAAI,SAACC,EAAMgB,GACrB,IAAMqE,EAAUrE,EAAI,EAAIiC,EAAWjC,EAAI,GAAK,KAC5C,GAAIA,EAAI,EACN,OACE,8BACE,sBAEEoB,GAAImC,EAAWc,EAAO,MACtBtD,GAAIiD,EAAiBK,EAAQpC,YAC7BZ,GAAIkC,EAAWvE,EAAI,MACnBgC,GAAIgD,EAAiBhF,EAAKiD,YAC1B/B,OAAQyC,EAAW,eALd3D,EAAK+E,IAOZ,wBAEExD,GAAIgD,EAAWvE,EAAI,MACnBwB,GAAIwD,EAAiBhF,EAAKiD,YAC1BxB,EAAE,IACFH,KAAMqC,EAAW,eAJZ3D,EAAK+E,YAYP,OAAhBxB,GAAwBE,EAAW9C,OAAS,GAC3C,cAAC,EAAD,CACEtB,MAAO6F,EACPvD,YAAayC,EACbxC,MAAM,yCAGO,OAAhB2B,GAAwBE,EAAW9C,OAAS,GAC3C,cAAC,EAAD,CACEtB,MAAOqF,EACP5B,WAAYqB,EACZxC,YAAayC,EACbxC,MAAM,qDAGO,OAAhB2B,GAAwBE,EAAW9C,OAAS,GAC3C,4BACG8C,EAAW1D,KAAI,SAACC,EAAMgB,GACrB,IAAMuB,EAAImC,EAAe1E,EAAI,MACvBwC,EAAI0C,EAAgBlF,EAAI,OAE9B,OACE,sBAEEiB,EAAC,YAAOsB,EAAI,GAAX,YAAiBC,EAAjB,kCACED,EAAI,GADN,cACc6B,EADd,cACiC7B,EAAI,GADrC,kCAECC,EAFD,wBAIDtB,OAAQyC,EAAW,SACnBrC,KAAMqC,EAAW,UANZ3D,EAAK+E,SA7FtB,OA2GA,gCACmB,OAAhBxB,GAAwBE,EAAW9C,OAAS,GAC3C,6BACG8C,EAAW1D,KAAI,SAACC,EAAMgB,GACrB,OACE,oBAAY,UAAShB,EAAK+E,GAAIO,QAASX,EAAvC,SACG3E,EAAKuF,MADCvE,QAOjB,kEACA,wBAAQsE,QAnJc,SAACV,GAC7BpB,EAAe,MACfF,EAAa,eAiJP,0BAbF,OAeA,gCACE,kEACA,wBAAQgC,QAnJc,SAACV,GAC7BtB,EAAa,MACbE,EAAe,OAiJT,2BC3LKgC,EATF,WACX,MAAwBlH,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKP,UAAU,UAAf,UACE,cAAC,EAAD,CAAUE,YAAaI,IACvB,cAAC,EAAD,CAAcuE,OAAQtE,QCAb+G,EATA,WACb,OACE,wBAAQtH,UAAU,SAAlB,SACE,qBAAKA,UAAU,4BAAf,SACE,8CCUOuH,G,OAVH,WACV,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SCNNC,iBAAO,cAAC,EAAD,IAASC,SAASC,cAAc,e","file":"static/js/main.2f55cfcf.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"hero is-success\">\r\n        <div className=\"hero-body\">\r\n          <p className=\"title\">furu-vis</p>\r\n          <p className=\"subtitle\">furu-vis</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import * as topojson from \"topojson\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst JapanMap = ({ currentArea }) => {\r\n  const [japanPath, setJapanPath] = useState([]);\r\n  const [area, setArea] = useState(null);\r\n  const [json, setJson] = useState(null);\r\n  const [targetPoint, setTargetPoint] = useState([]);\r\n\r\n  const width = 630;\r\n  const height = 250;\r\n  const scale = 30000 * 0.7 * 0.09;\r\n  const east = 138.915833,\r\n    west = 139.796111,\r\n    north = 35.672778,\r\n    south = 35.128889;\r\n\r\n  const projection = d3\r\n    .geoMercator()\r\n    .center([(west + east) / 2, (north + south) / 2 - 0.01])\r\n    .translate([width / 2, height - 60])\r\n    .scale(scale);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(`./data/japan_simplify.topojson`);\r\n\r\n      const data = await res.json();\r\n      const features = await topojson.feature(\r\n        data,\r\n        data.objects[\"N03-21_210101-N03-21_210101\"]\r\n      );\r\n\r\n      const path = d3.geoPath().projection(projection);\r\n      const japanPath = [];\r\n      features.features.map((item) => {\r\n        japanPath.push({\r\n          path: path(item),\r\n          areaCode: item.properties.N03_007,\r\n        });\r\n      });\r\n\r\n      setJapanPath(japanPath);\r\n      setJson(features);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (json) {\r\n      let target = JSON.parse(JSON.stringify(json));\r\n      let strArea = String(currentArea);\r\n      target.features.length = 0;\r\n\r\n      strArea = strArea.slice(0, -1);\r\n\r\n      json.features.map((item) => {\r\n        if (item.properties.N03_007 == strArea) {\r\n          target.features.push(item);\r\n        }\r\n      });\r\n      const tmpPoint = d3.geoCentroid(target);\r\n      const point = projection(tmpPoint);\r\n      setTargetPoint(point);\r\n      setArea(currentArea);\r\n    }\r\n  }, [currentArea]);\r\n\r\n  if (!japanPath.length) {\r\n    return (\r\n      <div className=\"column is-5\">\r\n        <div className=\"box\">\r\n          <p>loading</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"column is-5\">\r\n      <div className=\"box\">\r\n        <svg viewBox=\"-50 0 770 325\" width=\"500\" height=\"550\">\r\n          <g>\r\n            {japanPath.map((item, i) => (\r\n              <path\r\n                key={i}\r\n                d={item.path}\r\n                stroke=\"black\"\r\n                strokeWidth=\"0.8\"\r\n                strokeOpacity=\"0.5\"\r\n                style={{\r\n                  fill: area == item.areaCode ? \"red\" : \"white\",\r\n                }}\r\n              />\r\n            ))}\r\n          </g>\r\n          {targetPoint.length > 0 ? (\r\n            <g>\r\n              <circle\r\n                cx={targetPoint[0]}\r\n                cy={targetPoint[1]}\r\n                r=\"15\"\r\n                strokeWidth=\"4\"\r\n                fill=\"rgba(255,0,0,0)\"\r\n                stroke=\"red\"\r\n              ></circle>\r\n            </g>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default JapanMap;\r\n","export const VerricalAxis = ({ scale, graphHeight, label }) => {\r\n  const strokeColor = \"#888\";\r\n  const x = 0;\r\n  const [y1, y2] = scale.range();\r\n  const deviceWidth = window.innerWidth;\r\n\r\n  return (\r\n    <g>\r\n      <line\r\n        x1={x}\r\n        y1={y1}\r\n        x2={x}\r\n        y2={y2 + 2}\r\n        stroke={strokeColor}\r\n        strokeWidth=\"2\"\r\n      ></line>\r\n      <g>\r\n        <g transform={`translate(-80, ${graphHeight / 2}) rotate(-90)`}>\r\n          <text\r\n            x=\"0\"\r\n            y=\"0\"\r\n            textAnchor=\"end\"\r\n            dominantBaseline=\"central\"\r\n            fontSize={deviceWidth > 768 ? \"15\" : \"12\"}\r\n          >\r\n            {label}\r\n          </text>\r\n        </g>\r\n\r\n        {scale.ticks().map((y, i) => {\r\n          return (\r\n            <g key={i} transform={`translate(0, ${scale(y)})`}>\r\n              <line x1=\"0\" y1=\"0\" x2=\"5\" y2=\"0\" stroke={strokeColor}></line>\r\n              <text\r\n                x=\"-8\"\r\n                y=\"0\"\r\n                textAnchor=\"end\"\r\n                dominantBaseline=\"central\"\r\n                fill=\"black\"\r\n                fontSize={deviceWidth > 768 ? \"12\" : \"10\"}\r\n              >\r\n                {y}\r\n              </text>\r\n            </g>\r\n          );\r\n        })}\r\n      </g>\r\n    </g>\r\n  );\r\n};\r\nexport const HorizontalAxis = ({ scale, graphWidth, graphHeight, label }) => {\r\n  const strokeColor = \"#888\";\r\n  const y = graphHeight;\r\n  const deviceWidth = window.innerWidth;\r\n\r\n  const [x1, x2] = scale.range();\r\n  return (\r\n    <g>\r\n      <line x1={x1} y1={y} x2={x2 + 25} y2={y} stroke={strokeColor}></line>\r\n      <g>\r\n        <g transform={`translate(${graphWidth / 2}, ${y + 40})`}>\r\n          <text\r\n            x=\"0\"\r\n            y=\"0\"\r\n            textAnchor=\"end\"\r\n            dominantBaseline=\"central\"\r\n            fontSize=\"15\"\r\n          >\r\n            {label}\r\n          </text>\r\n        </g>\r\n\r\n        {scale.ticks(5).map((x, i) => {\r\n          return (\r\n            <g key={i} transform={`translate(${scale(x) + 20}, 0)`}>\r\n              {/* <line\r\n                x1=\"0\"\r\n                y1={graphHeight}\r\n                x2=\"0\"\r\n                y2={graphHeight - 10}\r\n                stroke={strokeColor}\r\n              ></line> */}\r\n              <text\r\n                x=\"0\"\r\n                y={y + 15}\r\n                textAnchor=\"middle\"\r\n                dominantBaseline=\"central\"\r\n                fontSize={deviceWidth > 768 ? \"12\" : \"10\"}\r\n              >\r\n                {x}\r\n              </text>\r\n            </g>\r\n          );\r\n        })}\r\n      </g>\r\n    </g>\r\n  );\r\n};\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { VerricalAxis, HorizontalAxis } from \"./Axis\";\r\nconst OverallGraph = ({ effect }) => {\r\n  const [population, setPopulation] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [graphType, setGraphType] = useState(\"price\");\r\n  const [displayYear, setDisplayYear] = useState(null);\r\n  const [detailData, setDetailData] = useState([]);\r\n  const [targetArea, setTargetArea] = useState(null);\r\n  const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res_popu = await fetch(\"./data/population_test.json\");\r\n      const data_popu = await res_popu.json();\r\n      setPopulation(data_popu);\r\n\r\n      const res_price = await fetch(\"./data/price_test.json\");\r\n      const data_price = await res_price.json();\r\n      setPrice(data_price);\r\n      const res_2019 = await fetch(\"./data/2019_test.json\");\r\n      const data_2019 = await res_2019.json();\r\n      setDetailData(data_2019);\r\n    })();\r\n  }, []);\r\n  if (population.length === 0) {\r\n    return <div className=\"column is-5\">Loading...</div>;\r\n  }\r\n  const margin = {\r\n    top: 50,\r\n    bottom: 50,\r\n    left: 200,\r\n    right: 50,\r\n  };\r\n\r\n  const contentWidth = 500;\r\n  const contentHeight = 500;\r\n  const svgWidth = margin.right + margin.left + contentWidth;\r\n  const svgHeight = margin.top + margin.bottom + contentHeight;\r\n  const xScaleYear = d3\r\n    .scaleLinear()\r\n    .domain(d3.extent(price, (item) => item[\"year\"]))\r\n    .range([0, contentWidth])\r\n    .nice();\r\n  const xScaleAreaName = d3\r\n    .scaleLinear()\r\n    .domain(d3.extent(detailData, (item) => item[\"rank\"]))\r\n    .range([0, contentWidth])\r\n    .nice();\r\n  const mouseEnterTypeHandler = (e) => {\r\n    setDisplayYear(null);\r\n    setGraphType(\"population\");\r\n  };\r\n  const mouseEnterYearHandler = (e) => {\r\n    setGraphType(null);\r\n    setDisplayYear(2019);\r\n  };\r\n  const mouseEnterAreaHandler = (e) => {\r\n    effect(e.currentTarget.dataset.id);\r\n  };\r\n\r\n  const yScalePopulation = d3\r\n    .scaleLinear()\r\n    .domain([0, d3.extent(population, (item) => item[\"population\"])[1]])\r\n    .range([contentHeight, 0]);\r\n  const yScalePrice = d3\r\n    .scaleLinear()\r\n    .domain([0, d3.extent(price, (item) => item[\"price\"])[1]])\r\n    .range([contentHeight, 0]);\r\n  const yScale2019Price = d3\r\n    .scaleLinear()\r\n    .domain([0, d3.extent(detailData, (item) => item[\"price\"])[1]])\r\n    .range([contentHeight, 0]);\r\n  return (\r\n    <div className=\"column is-7\">\r\n      <div className=\"box\">\r\n        <svg\r\n          viewBox={`${-margin.left} ${-margin.top} ${svgWidth} ${svgHeight}`}\r\n          width={svgWidth}\r\n          height={svgHeight}\r\n        >\r\n          {displayYear === null && graphType && (\r\n            <HorizontalAxis\r\n              scale={xScaleYear}\r\n              graphWidth={contentWidth}\r\n              graphHeight={contentHeight}\r\n              label=\"年\"\r\n            />\r\n          )}\r\n          {displayYear === null && graphType && (\r\n            <VerricalAxis\r\n              scale={graphType === \"price\" ? yScalePrice : yScalePopulation}\r\n              graphHeight={contentHeight}\r\n              label={graphType === \"price\" ? \"受け入れ額\" : \"人口\"}\r\n            />\r\n          )}\r\n          {displayYear === null && graphType === \"price\" && (\r\n            <g>\r\n              {price.map((item, i) => {\r\n                const x = xScaleYear(item[\"year\"]) + 20;\r\n                const y = yScalePrice(item[\"price\"]);\r\n\r\n                console.log(xScaleYear(item[\"year\"]));\r\n\r\n                return (\r\n                  <path\r\n                    key={item.id}\r\n                    d={`M ${x - 10} ${y}\r\n                       H ${x + 10} V ${contentHeight} H ${x - 10} \r\n                      V ${y}\r\n                      `}\r\n                    stroke={colorScale(\"price\")}\r\n                    fill={colorScale(\"price\")}\r\n                  />\r\n                );\r\n              })}\r\n            </g>\r\n          )}\r\n          {displayYear === null && graphType === \"population\" && (\r\n            <g>\r\n              {population.map((item, i) => {\r\n                const preData = i > 0 ? population[i - 1] : null;\r\n                if (i > 0) {\r\n                  return (\r\n                    <g>\r\n                      <line\r\n                        key={item.id}\r\n                        x1={xScaleYear(preData[\"year\"])}\r\n                        y1={yScalePopulation(preData.population)}\r\n                        x2={xScaleYear(item[\"year\"])}\r\n                        y2={yScalePopulation(item.population)}\r\n                        stroke={colorScale(\"population\")}\r\n                      ></line>\r\n                      <circle\r\n                        key={item.id}\r\n                        cx={xScaleYear(item[\"year\"])}\r\n                        cy={yScalePopulation(item.population)}\r\n                        r=\"2\"\r\n                        fill={colorScale(\"population\")}\r\n                      ></circle>\r\n                    </g>\r\n                  );\r\n                }\r\n              })}\r\n            </g>\r\n          )}\r\n          {displayYear === 2019 && detailData.length > 0 && (\r\n            <VerricalAxis\r\n              scale={yScale2019Price}\r\n              graphHeight={contentHeight}\r\n              label=\"受け入れ金額\"\r\n            />\r\n          )}\r\n          {displayYear === 2019 && detailData.length > 0 && (\r\n            <HorizontalAxis\r\n              scale={xScaleAreaName}\r\n              graphWidth={contentWidth}\r\n              graphHeight={contentHeight}\r\n              label=\"市区町村（順位）\"\r\n            />\r\n          )}\r\n          {displayYear === 2019 && detailData.length > 0 && (\r\n            <g>\r\n              {detailData.map((item, i) => {\r\n                const x = xScaleAreaName(item[\"rank\"]);\r\n                const y = yScale2019Price(item[\"price\"]);\r\n\r\n                return (\r\n                  <path\r\n                    key={item.id}\r\n                    d={`M ${x - 10} ${y}\r\n                   H ${x + 10} V ${contentHeight} H ${x - 10} \r\n                  V ${y}\r\n                  `}\r\n                    stroke={colorScale(\"price\")}\r\n                    fill={colorScale(\"price\")}\r\n                  />\r\n                );\r\n              })}\r\n            </g>\r\n          )}\r\n          )\r\n        </svg>\r\n        <div>\r\n          {displayYear === 2019 && detailData.length > 0 && (\r\n            <ul>\r\n              {detailData.map((item, i) => {\r\n                return (\r\n                  <li key={i} data-id={item.id} onClick={mouseEnterAreaHandler}>\r\n                    {item.name}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n          <span>特徴を選択</span>\r\n          <button onClick={mouseEnterTypeHandler}>人口</button>)\r\n        </div>\r\n        <div>\r\n          <span>年度を選択</span>\r\n          <button onClick={mouseEnterYearHandler}>2019</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default OverallGraph;\r\n","import JapanMap from \"./JapanMap\";\r\n// import MainView from \"./MainView\";\r\nimport OverallGraph from \"./OverallGraph\";\r\nimport { useEffect, useState } from \"react\";\r\nconst Main = () => {\r\n  const [area, setArea] = useState(null);\r\n  return (\r\n    <div className=\"columns\">\r\n      <JapanMap currentArea={area} />\r\n      <OverallGraph effect={setArea} />\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n","const Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>Furu-Vis</p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\nexport default Footer;\r\n","import Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"bulma/css/bulma.css\";\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { render } from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nrender(<App />, document.querySelector(\"#content\"));\r\n"],"sourceRoot":""}