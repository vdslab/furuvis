{"version":3,"sources":["components/Header.js","components/ZoomableSVG.js","components/JapanMap.js","components/Axis.js","components/Legend.js","components/OverallGraph.js","components/IndividualGraph.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["Header","className","ZoomableSVG","children","svgRef","width","height","useRef","useState","k","setK","x","setX","y","setY","useEffect","zoom","d3","on","event","transform","scaleExtent","current","call","ref","viewBox","JapanMap","currentArea","japanPath","setJapanPath","area","setArea","json","setJson","targetPoint","setTargetPoint","projection","center","translate","scale","a","fetch","res","data","topojson","objects","features","path","map","item","push","areaCode","properties","N03_007","target","JSON","parse","stringify","strArea","String","id","slice","length","filter","N03_003","centerPoint","style","marginLeft","marginRight","i","d","stroke","strokeWidth","strokeOpacity","fill","cx","cy","r","VerricalAxis","graphWidth","graphHeight","location","graphName","label","strokeColor","range","y1","y2","deviceWidth","window","innerWidth","labelLen","x1","x2","dominantBaseline","fontSize","textAnchor","ticks","HorizontalAxis","setData","graphType","optionData","tickCount","clickYearHandler","e","currentTarget","dataset","name","cursor","Legend","domain","OverallGraph","setYear","colorScale","population","setPopulation","price","setPrice","res_popu","data_popu","res_price","data_price","margin","contentWidth","contentHeight","svgWidth","svgHeight","xScaleYear","yScalePopulation","yScalePrice","marginBottom","preData","IndividualGraph","year","detailData","setDetailData","ADYear","resYear","datum","xScaleAreaName","Object","keys","marginTop","paddingLeft","Main","Footer","href","App","render","document","querySelector"],"mappings":"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","file":"static/js/main.4fcd1f5a.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"hero is-small is-success\">\r\n        <div className=\"hero-body\">\r\n          <p className=\"title\">Furu-vis</p>\r\n          <p className=\"subtitle\">~ふるさと納税どこが多いの？~</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nfunction ZoomableSVG({ children, width, height }) {\r\n  const svgRef = useRef();\r\n  const [k, setK] = useState(1);\r\n  const [x, setX] = useState(0);\r\n  const [y, setY] = useState(0);\r\n  useEffect(() => {\r\n    const zoom = d3.zoom().on(\"zoom\", (event) => {\r\n      const { x, y, k } = event.transform;\r\n      setK(k);\r\n      setX(x);\r\n      setY(y);\r\n    });\r\n    zoom.scaleExtent([0.5, 2]);\r\n    d3.select(svgRef.current).call(zoom);\r\n  }, []);\r\n\r\n  return (\r\n    <svg ref={svgRef} viewBox=\"-50 0 770 325\" width=\"500\" height=\"600\">\r\n      <g transform={`translate(${x}, ${y})scale(${k})`}>{children}</g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default ZoomableSVG;\r\n","import * as topojson from \"topojson\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ZoomableSVG from \"./ZoomableSVG\";\r\n\r\nconst JapanMap = ({ currentArea }) => {\r\n  const [japanPath, setJapanPath] = useState([]);\r\n  const [area, setArea] = useState(null);\r\n  const [json, setJson] = useState(null);\r\n  const [targetPoint, setTargetPoint] = useState([]);\r\n  const svgWidth = 200;\r\n  const svgHeight = 500;\r\n  const width = 630;\r\n  const height = 250;\r\n  const scale = 30000 * 0.7 * 0.1;\r\n  const east = 138.915833,\r\n    west = 139.796111,\r\n    north = 35.672778,\r\n    south = 35.128889;\r\n\r\n  const projection = d3\r\n    .geoMercator()\r\n    .center([(west + east) / 2 - 0.5, (north + south) / 2 + 1.8])\r\n    .translate([width / 2, height - 60])\r\n    .scale(scale);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(`./data/japan_simplify.topojson`);\r\n\r\n      const data = await res.json();\r\n      const features = await topojson.feature(\r\n        data,\r\n        data.objects[\"N03-21_210101-N03-21_210101\"]\r\n      );\r\n\r\n      const path = d3.geoPath().projection(projection);\r\n      const japanPath = [];\r\n      features.features.map((item) => {\r\n        japanPath.push({\r\n          path: path(item),\r\n          areaCode: item.properties.N03_007,\r\n        });\r\n      });\r\n\r\n      setJapanPath(japanPath);\r\n      setJson(features);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (json) {\r\n      const target = JSON.parse(JSON.stringify(json));\r\n      const strArea = String(currentArea.id).slice(0, -1);\r\n      target.features.length = 0;\r\n      target.features = json.features.filter((item) => {\r\n        if (currentArea.area === item.properties.N03_003) {\r\n          return true;\r\n        } else if (String(item.properties.N03_007) === strArea) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n      const centerPoint = projection(d3.geoCentroid(target));\r\n      setTargetPoint(centerPoint);\r\n      setArea(currentArea);\r\n    }\r\n  }, [currentArea]);\r\n\r\n  if (!japanPath.length) {\r\n    return (\r\n      <div className=\"column is-5\">\r\n        <div className=\"box\">\r\n          <p>loading</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"column is-5\">\r\n      <div className=\"box\" style={{ marginLeft: \"20px\", marginRight: \"0\" }}>\r\n        <ZoomableSVG width={svgWidth} height={svgHeight}>\r\n          <g>\r\n            {japanPath.map((item, i) => (\r\n              <path\r\n                key={i}\r\n                d={item.path}\r\n                stroke=\"black\"\r\n                strokeWidth=\"0.8\"\r\n                strokeOpacity=\"0.5\"\r\n                style={{\r\n                  fill: area == item.areaCode ? \"red\" : \"white\",\r\n                }}\r\n              />\r\n            ))}\r\n          </g>\r\n          {targetPoint.length > 0 ? (\r\n            <g>\r\n              <circle\r\n                cx={targetPoint[0]}\r\n                cy={targetPoint[1]}\r\n                r=\"15\"\r\n                strokeWidth=\"4\"\r\n                fill=\"rgba(255,0,0,0)\"\r\n                stroke=\"red\"\r\n              ></circle>\r\n            </g>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </ZoomableSVG>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default JapanMap;\r\n","import { useState } from \"react\";\r\nexport const VerricalAxis = ({\r\n  scale,\r\n  graphWidth,\r\n  graphHeight,\r\n  location,\r\n  graphName,\r\n  label,\r\n}) => {\r\n  const strokeColor = \"#888\";\r\n  const x = location === \"left\" ? 0 : graphWidth + 40;\r\n  const [y1, y2] = scale.range();\r\n  const deviceWidth = window.innerWidth;\r\n  let labelLen = 0;\r\n  if (location === \"left\") {\r\n    if (graphName === \"overall\") {\r\n      labelLen = -80;\r\n    } else {\r\n      labelLen = -50;\r\n    }\r\n  } else {\r\n    labelLen = graphWidth + 100;\r\n  }\r\n  return (\r\n    <g>\r\n      <line\r\n        x1={x}\r\n        y1={y1}\r\n        x2={x}\r\n        y2={y2 + 2}\r\n        stroke={strokeColor}\r\n        strokeWidth=\"2\"\r\n      ></line>\r\n      <g>\r\n        <g\r\n          transform={`translate(${labelLen}, ${graphHeight / 2}) rotate(${\r\n            location === \"left\" ? -90 : 90\r\n          })`}\r\n        >\r\n          <text\r\n            x=\"0\"\r\n            y=\"0\"\r\n            dominantBaseline=\"central\"\r\n            fontSize={deviceWidth > 768 ? \"15\" : \"12\"}\r\n            textAnchor=\"middle\"\r\n          >\r\n            {label}\r\n          </text>\r\n        </g>\r\n        <g>\r\n          <text\r\n            transform={`translate(${\r\n              graphName === \"individual\" ? -40 : -60\r\n            },20)`}\r\n            x=\"0\"\r\n            y=\"0\"\r\n            textAnchor=\"start\"\r\n            fontSize=\"10\"\r\n          >\r\n            万\r\n          </text>\r\n        </g>\r\n        {scale.ticks().map((y, i) => {\r\n          return (\r\n            <g key={i} transform={`translate(${x}, ${scale(y)})`}>\r\n              <line\r\n                x1=\"0\"\r\n                y1=\"0\"\r\n                x2={location === \"left\" ? 5 : -5}\r\n                y2=\"0\"\r\n                stroke={strokeColor}\r\n              ></line>\r\n              <text\r\n                x={location === \"left\" ? -8 : 42}\r\n                y=\"0\"\r\n                textAnchor=\"end\"\r\n                dominantBaseline=\"central\"\r\n                fill=\"black\"\r\n                fontSize={deviceWidth > 768 ? \"12\" : \"10\"}\r\n              >\r\n                {location === \"left\" ? y : y}\r\n              </text>\r\n            </g>\r\n          );\r\n        })}\r\n      </g>\r\n    </g>\r\n  );\r\n};\r\nexport const HorizontalAxis = ({\r\n  scale,\r\n  graphWidth,\r\n  graphHeight,\r\n  label,\r\n  setData,\r\n  graphType,\r\n  optionData,\r\n}) => {\r\n  const strokeColor = \"#888\";\r\n  const y = graphHeight;\r\n  const tickCount = graphType === \"year\" ? 10 : 20;\r\n  const [x1, x2] = scale.range();\r\n  const [hover, setHover] = useState(false);\r\n  const clickYearHandler = (e) => {\r\n    if (graphType === \"year\") {\r\n      setData(e.currentTarget.dataset.id);\r\n    } else {\r\n      setData({\r\n        id: e.currentTarget.dataset.id,\r\n        area: e.currentTarget.dataset.name,\r\n      });\r\n    }\r\n  };\r\n  const mouseOverHandler = (e) => {};\r\n  return (\r\n    <g>\r\n      <line x1={x1} y1={y} x2={x2 + 40} y2={y} stroke={strokeColor}></line>\r\n      <g>\r\n        <g\r\n          transform={`translate(${graphWidth / 2}, ${\r\n            y + (graphType === \"area\" ? 48 : 40)\r\n          })`}\r\n        >\r\n          <text\r\n            x=\"0\"\r\n            y=\"0\"\r\n            textAnchor=\"end\"\r\n            dominantBaseline=\"central\"\r\n            fontSize=\"15\"\r\n          >\r\n            {label}\r\n          </text>\r\n        </g>\r\n\r\n        {scale.ticks(tickCount).map((x, i) => {\r\n          return (\r\n            <g\r\n              key={i}\r\n              transform={`translate(${scale(x) + 20}, ${\r\n                y + (graphType === \"area\" ? 7 : 15)\r\n              })`}\r\n            >\r\n              <text\r\n                x=\"0\"\r\n                y=\"0\"\r\n                textAnchor=\"middle\"\r\n                dominantBaseline=\"central\"\r\n                fontSize={graphType !== \"area\" ? \"12\" : \"10\"}\r\n                transform={graphType === \"area\" ? \"rotate(45)\" : \"\"}\r\n                textAnchor={graphType === \"area\" ? \"start\" : \"middle\"}\r\n                style={{ cursor: \"pointer\" }}\r\n                data-id={\r\n                  graphType !== \"area\" || i === 20 ? x : optionData[i].id\r\n                }\r\n                data-name={\r\n                  graphType === \"area\" && i < 20 ? optionData[i].area : \"\"\r\n                }\r\n                onClick={clickYearHandler}\r\n              >\r\n                {graphType !== \"area\" || i === 20 ? x : optionData[i].area}\r\n              </text>\r\n            </g>\r\n          );\r\n        })}\r\n      </g>\r\n    </g>\r\n  );\r\n};\r\n","function Legend({ scale, graphWidth }) {\r\n  return (\r\n    <g transform=\"translate(200,0)\">\r\n      {scale.domain().map((item, i) => {\r\n        return (\r\n          <g\r\n            key={i}\r\n            transform={`translate(${graphWidth - 80}, ${20 + i * 15})`}\r\n          >\r\n            <circle r=\"5\" fill={scale(item)} />\r\n            <text x=\"10\" fontSize=\"11\" dominantBaseline=\"central\">\r\n              {item}\r\n            </text>\r\n          </g>\r\n        );\r\n      })}\r\n    </g>\r\n  );\r\n}\r\nexport default Legend;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { VerricalAxis, HorizontalAxis } from \"./Axis\";\r\nimport Legend from \"./Legend\";\r\nconst OverallGraph = ({ setYear, colorScale }) => {\r\n  const [population, setPopulation] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res_popu = await fetch(\"./data/population.json\");\r\n      const data_popu = await res_popu.json();\r\n      setPopulation(data_popu);\r\n\r\n      const res_price = await fetch(\"./data/price_all.json\");\r\n      const data_price = await res_price.json();\r\n      setPrice(data_price);\r\n    })();\r\n  }, []);\r\n  if (price.length === 0) {\r\n    return <div className=\"column is-5\">Loading...</div>;\r\n  }\r\n  const margin = {\r\n    top: 10,\r\n    bottom: 50,\r\n    left: 100,\r\n    right: 200,\r\n  };\r\n\r\n  const contentWidth = 400;\r\n  const contentHeight = 250;\r\n  const svgWidth = margin.right + margin.left + contentWidth;\r\n  const svgHeight = margin.top + margin.bottom + contentHeight;\r\n  const xScaleYear = d3\r\n    .scaleLinear()\r\n    .domain(d3.extent(price, (item) => item[\"year\"]))\r\n    .range([0, contentWidth]);\r\n\r\n  const yScalePopulation = d3\r\n    .scaleLinear()\r\n    .domain([0, d3.extent(population, (item) => item[\"population\"])[1]])\r\n    .range([contentHeight, 0]);\r\n  const yScalePrice = d3\r\n    .scaleLinear()\r\n    .domain([0, d3.extent(price, (item) => item[\"price\"] / 10000)[1]])\r\n    .range([contentHeight, 0]);\r\n\r\n  return (\r\n    <div className=\"box\" style={{ marginRight: \"20px\", marginBottom: \"5px\" }}>\r\n      <div>\r\n        <svg\r\n          viewBox={`${-margin.left} ${-margin.top} ${svgWidth} ${svgHeight}`}\r\n          width={svgWidth}\r\n          height={svgHeight}\r\n        >\r\n          <HorizontalAxis\r\n            scale={xScaleYear}\r\n            graphWidth={contentWidth}\r\n            graphHeight={contentHeight}\r\n            label=\"年\"\r\n            setData={setYear}\r\n            graphType={\"year\"}\r\n          />\r\n\r\n          <VerricalAxis\r\n            scale={yScalePrice}\r\n            graphWidth={contentWidth}\r\n            graphHeight={contentHeight}\r\n            graphName={`overall`}\r\n            location=\"left\"\r\n            label=\"受け入れ額\"\r\n          />\r\n          <VerricalAxis\r\n            scale={yScalePopulation}\r\n            graphWidth={contentWidth}\r\n            graphHeight={contentHeight}\r\n            graphName={`overall`}\r\n            location=\"right\"\r\n            label=\"人口\"\r\n          />\r\n          <Legend scale={colorScale} graphWidth={contentWidth} />\r\n          <g>\r\n            {price.map((item, i) => {\r\n              const x = xScaleYear(item[\"year\"]) + 20;\r\n              const y = yScalePrice(item[\"price\"] / 10000);\r\n\r\n              return (\r\n                <path\r\n                  key={item.id}\r\n                  d={`M ${x - 10} ${y}\r\n                       H ${x + 10} V ${contentHeight} H ${x - 10} \r\n                      V ${y}\r\n                      `}\r\n                  stroke={colorScale(\"受け入れ額\")}\r\n                  fill={colorScale(\"受け入れ額\")}\r\n                />\r\n              );\r\n            })}\r\n          </g>\r\n\r\n          <g>\r\n            {population.map((item, i) => {\r\n              const preData = i > 0 ? population[i - 1] : null;\r\n\r\n              return (\r\n                <g key={item.id * 100}>\r\n                  {i > 0 && (\r\n                    <line\r\n                      key={item.id * 10}\r\n                      x1={xScaleYear(preData[\"year\"]) + 20}\r\n                      y1={yScalePopulation(preData.population)}\r\n                      x2={xScaleYear(item[\"year\"]) + 20}\r\n                      y2={yScalePopulation(item.population)}\r\n                      stroke={colorScale(\"人口\")}\r\n                      strokeWidth=\"3\"\r\n                    ></line>\r\n                  )}\r\n                  <circle\r\n                    key={item.id}\r\n                    cx={xScaleYear(item[\"year\"]) + 20}\r\n                    cy={yScalePopulation(item.population)}\r\n                    r=\"4\"\r\n                    fill={colorScale(\"人口\")}\r\n                  ></circle>\r\n                </g>\r\n              );\r\n            })}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default OverallGraph;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { VerricalAxis, HorizontalAxis } from \"./Axis\";\r\nimport Legend from \"./Legend\";\r\n\r\nconst IndividualGraph = ({ setArea, year, colorScale }) => {\r\n  const [detailData, setDetailData] = useState([]);\r\n  const margin = {\r\n    top: 0,\r\n    bottom: 55,\r\n    left: 60,\r\n    right: 200,\r\n  };\r\n\r\n  const contentWidth = 500;\r\n  const contentHeight = 250;\r\n  const svgWidth = margin.right + margin.left + contentWidth;\r\n  const svgHeight = margin.top + margin.bottom + contentHeight;\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = {};\r\n      let ADYear = 2008;\r\n      for (let i = 20; i < 33; i++) {\r\n        const resYear = i <= 30 ? \"H\" + i : \"R\" + (i - 30);\r\n        const res = await fetch(`./data/${resYear}.json`);\r\n        const datum = await res.json();\r\n        data[ADYear] = datum;\r\n        ADYear++;\r\n      }\r\n      setDetailData(data);\r\n    })();\r\n  }, []);\r\n  if (detailData.length === 0) {\r\n    return <div></div>;\r\n  }\r\n  if (!year) {\r\n    return <div className=\"column is-5\">Loading...</div>;\r\n  }\r\n  const data = detailData[year].map((item) => {\r\n    return {\r\n      id: item.id,\r\n      area: item.area,\r\n    };\r\n  });\r\n\r\n  const xScaleAreaName = d3\r\n    .scaleLinear()\r\n    .domain(\r\n      d3.extent([\r\n        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n      ])\r\n    )\r\n    .range([0, contentWidth]);\r\n  const yScalePrice = d3\r\n    .scaleLinear()\r\n    .domain([\r\n      0,\r\n      d3.extent(detailData[year], (item) => item[\"price\"] / 10000)[1],\r\n    ])\r\n    .range([contentHeight, 0]);\r\n  const yScalePopulation = d3\r\n    .scaleLinear()\r\n    .domain([0, d3.extent(detailData[year], (item) => item[\"population\"])[1]])\r\n    .range([contentHeight, 0]);\r\n  if (Object.keys(detailData).length) {\r\n    return (\r\n      <div\r\n        className=\"box\"\r\n        style={{ marginRight: \"20px\", marginTop: \"5px\", paddingLeft: \"5px\" }}\r\n      >\r\n        <div>\r\n          <svg\r\n            viewBox={`${-margin.left} ${-margin.top} ${svgWidth} ${svgHeight}`}\r\n            width={svgWidth}\r\n            height={svgHeight}\r\n          >\r\n            <VerricalAxis\r\n              scale={yScalePrice}\r\n              graphWidth={contentWidth}\r\n              graphHeight={contentHeight}\r\n              graphName={`individual`}\r\n              location=\"left\"\r\n              label=\"受け入れ金額\"\r\n            />\r\n            <VerricalAxis\r\n              scale={yScalePopulation}\r\n              graphWidth={contentWidth}\r\n              graphHeight={contentHeight}\r\n              graphName={`individual`}\r\n              location=\"right\"\r\n              label=\"人口\"\r\n            />\r\n            <HorizontalAxis\r\n              scale={xScaleAreaName}\r\n              graphWidth={contentWidth}\r\n              graphHeight={contentHeight}\r\n              label=\"市区町村\"\r\n              setData={setArea}\r\n              graphType=\"area\"\r\n              optionData={data}\r\n            />\r\n            <Legend scale={colorScale} graphWidth={contentWidth} />\r\n            <g>\r\n              {detailData[year].map((item, i) => {\r\n                const x = xScaleAreaName(i + 1) + 20;\r\n                const y = yScalePrice(item[\"price\"] / 10000);\r\n\r\n                return (\r\n                  <path\r\n                    key={item.id}\r\n                    d={`M ${x - 10} ${y}\r\n                   H ${x + 10} V ${contentHeight} H ${x - 10} \r\n                  V ${y}\r\n                  `}\r\n                    fill={colorScale(\"受け入れ額\")}\r\n                  />\r\n                );\r\n              })}\r\n            </g>\r\n            <g>\r\n              {detailData[year].map((item, i) => {\r\n                const preData = i > 0 ? detailData[year][i - 1] : null;\r\n                if (i > 0) {\r\n                  return (\r\n                    <g key={item.id * 100}>\r\n                      <line\r\n                        key={item.id * 10}\r\n                        x1={xScaleAreaName(i) + 20}\r\n                        y1={yScalePopulation(preData.population)}\r\n                        x2={xScaleAreaName(i + 1) + 20}\r\n                        y2={yScalePopulation(item.population)}\r\n                        stroke={colorScale(\"人口\")}\r\n                        strokeWidth=\"3\"\r\n                      ></line>\r\n                      <circle\r\n                        key={item.id}\r\n                        cx={xScaleAreaName(i + 1) + 20}\r\n                        cy={yScalePopulation(item.population)}\r\n                        r=\"4\"\r\n                        fill={colorScale(\"人口\")}\r\n                      ></circle>\r\n                    </g>\r\n                  );\r\n                }\r\n              })}\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default IndividualGraph;\r\n","import JapanMap from \"./JapanMap\";\r\nimport OverallGraph from \"./OverallGraph\";\r\nimport { useState } from \"react\";\r\nimport IndividualGraph from \"./IndividualGraph\";\r\nimport * as d3 from \"d3\";\r\nconst Main = () => {\r\n  const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\r\n  const FIRST_YEAR = 2008;\r\n  const [area, setArea] = useState(null);\r\n  const [year, setYear] = useState(FIRST_YEAR);\r\n  return (\r\n    <div className=\"columns is-multiline\" style={{ marginTop: \"10px\" }}>\r\n      <JapanMap currentArea={area} />\r\n      <div className=\"column is-7\">\r\n        <OverallGraph setYear={setYear} colorScale={colorScale} />\r\n        <IndividualGraph\r\n          setArea={setArea}\r\n          year={year}\r\n          colorScale={colorScale}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n","const Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>\r\n          このサイトは\r\n          <a\r\n            href=\"https://www.soumu.go.jp/main_sosiki/jichi_zeisei/czaisei/czaisei_seido/080430_2_kojin.html\"\r\n            target=\"_blank\"\r\n          >\r\n            総務省\r\n          </a>\r\n          からデータを持ってきています\r\n          <br />\r\n          -team-Sashimi-\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\nexport default Footer;\r\n","import Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"bulma/css/bulma.css\";\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { render } from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nrender(<App />, document.querySelector(\"#content\"));\r\n"],"sourceRoot":""}